import { createClient } from '@supabase/supabase-js'

// Configura√ß√£o com fallback para desenvolvimento
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL || 'https://zibuyabpsvgulvigvdtb.supabase.co'
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY
const supabaseServiceKey = import.meta.env.VITE_SUPABASE_SERVICE_ROLE_KEY

// Debug das vari√°veis de ambiente
console.log('üîç [Supabase] URL:', supabaseUrl)
console.log('üîç [Supabase] Anon Key:', supabaseAnonKey ? '***' : 'N√ÉO DEFINIDA')
console.log('üîç [Supabase] Service Key:', supabaseServiceKey ? '***' : 'N√ÉO DEFINIDA')

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå [Supabase] Vari√°veis de ambiente n√£o configuradas!')
  console.error('‚ùå [Supabase] VITE_SUPABASE_URL:', supabaseUrl)
  console.error('‚ùå [Supabase] VITE_SUPABASE_ANON_KEY:', supabaseAnonKey ? 'DEFINIDA' : 'N√ÉO DEFINIDA')
  console.error('‚ùå [Supabase] Crie um arquivo .env com as chaves do Supabase!')
} else {
  console.log('‚úÖ [Supabase] Configura√ß√£o carregada com sucesso!')
}

// Criar cliente com chave an√¥nima para opera√ß√µes b√°sicas
export const supabase = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: false, // DESABILITADO para evitar login autom√°tico
    storage: typeof window !== 'undefined' ? window.localStorage : undefined,
    storageKey: 'sispac-auth-token'
  },
  // Configura√ß√µes adicionais para produ√ß√£o
  realtime: {
    params: {
      eventsPerSecond: 10
    }
  },
  global: {
    headers: {
      'X-Client-Info': 'sispac-web'
    }
  }
})

// Testar conex√£o apenas em desenvolvimento
if (import.meta.env.DEV) {
  supabase.auth.getSession().then(({ data, error }) => {
    if (error) {
      console.error('‚ùå [Supabase] Erro na conex√£o:', error)
    } else {
      console.log('‚úÖ [Supabase] Conex√£o estabelecida com sucesso!')
      if (data.session) {
        console.log('‚úÖ [Supabase] Sess√£o ativa encontrada:', data.session.user.email)
      } else {
        console.log('‚ÑπÔ∏è [Supabase] Nenhuma sess√£o ativa')
      }
    }
  })
}

// Criar cliente com chave de servi√ßo para opera√ß√µes que precisam contornar RLS
export const supabaseAdmin = supabaseServiceKey 
  ? createClient(supabaseUrl, supabaseServiceKey, {
      auth: {
        autoRefreshToken: false,
        persistSession: false
      }
    })
  : supabase // Fallback para o cliente an√¥nimo se n√£o houver chave de servi√ßo
