import { getSupabaseAdmin, assertAuth, ok, fail } from './_utils.js'

// Fun√ß√£o para classificar o status baseado no score
function classify(score) {
  if (score <= 67) return 'ABAIXO DA EXPECTATIVA'
  if (score <= 75) return 'DENTRO DA EXPECTATIVA'
  if (score <= 95) return 'ACIMA DA EXPECTATIVA'
  return 'SUPEROU A EXPECTATIVA'
}

// Fun√ß√£o para obter perfil comportamental completo
function getBehavioralProfile(status) {
  const profiles = {
    "ABAIXO DA EXPECTATIVA": {
      perfil: "Pessoas nessa faixa tendem a demonstrar um alinhamento fraco entre como se veem e como s√£o percebidas; apresentam valores selecionados que indicam boa inten√ß√£o, mas com inconsist√™ncia pr√°tica. H√° tend√™ncia a evitar exposi√ß√£o, agir de forma conservadora e priorizar seguran√ßa relacional.",
      comportamento: "Comportamento reservado, prefere atuar de acordo com instru√ß√µes claras. Evita riscos e decis√µes r√°pidas; pode reagir de forma passiva sob press√£o.",
      competencias: "Compet√™ncias interpessoais b√°sicas (escuta, simpatia), mas com lacunas em tomada de decis√£o, proatividade e organiza√ß√£o estrat√©gica.",
      lideranca: "Pouca ou nenhuma propens√£o a lideran√ßa formal. Se assumir cargo de coordena√ß√£o, tende a gerir tarefas mais do que pessoas.",
      areas_desenvolvimento: [
        "Autoconfian√ßa e assertividade",
        "Iniciativa e resolu√ß√£o aut√¥noma de problemas",
        "Clareza de prioridades e organiza√ß√£o",
        "Comunica√ß√£o direta em situa√ß√µes de conflito"
      ],
      visao_estrategica: "Foco em tarefas imediatas e seguran√ßa operacional. Dificuldade para enxergar oportunidades de melhoria e impacto estrat√©gico.",
      recomendacoes: "Oferecer mentoring ou coaching focado em confian√ßa, exerc√≠cios de tomada de decis√£o com baixo risco e treinamentos de comunica√ß√£o assertiva."
    },
    "DENTRO DA EXPECTATIVA": {
      perfil: "Indiv√≠duos funcionais e confi√°veis: equilibram compet√™ncias sociais com entrega est√°vel. S√£o vistos como consistentes e respons√°veis; t√™m valores alinhados ao ambiente, mas ainda sem grande diferencia√ß√£o.",
      comportamento: "Proativos em doses moderadas: assumem tarefas, colaboram e mant√™m bom relacionamento interpessoal. Tendem a seguir processos e buscar seguran√ßa nas decis√µes.",
      competencias: "Bons fundamentos em comunica√ß√£o, trabalho em equipe e cumprimento de prazos. Capacidade t√©cnica razo√°vel; aprendem com treinamentos formais.",
      lideranca: "Potencial para lideran√ßa de primeira linha (supervis√£o), especialmente em ambientes com processos claros.",
      areas_desenvolvimento: [
        "Tomada de decis√£o em ambientes amb√≠guos",
        "Pensamento estrat√©gico de curto prazo",
        "Autonomia para iniciativas fora do manual"
      ],
      visao_estrategica: "Compreens√£o b√°sica de objetivos organizacionais. Capacidade de alinhar trabalho individual com metas de equipe.",
      recomendacoes: "Designar projetos com responsabilidade incremental, treinamentos em resolu√ß√£o de problemas e incentivar participa√ß√£o em iniciativas interdepartamentais."
    },
    "ACIMA DA EXPECTATIVA": {
      perfil: "Profissional maduro emocionalmente, com alto alinhamento de valores e imagem percebida. Demonstra empatia ativa e energia para colaborar.",
      comportamento: "Proatividade clara, busca solu√ß√µes que beneficiam grupo e organiza√ß√£o. Resolve problemas considerando impacto nas pessoas.",
      competencias: "Fortes compet√™ncias interpessoais e de execu√ß√£o: comunica√ß√£o clara, prioriza√ß√£o e acompanhamento. Boa rela√ß√£o entre habilidades t√©cnicas e soft skills.",
      lideranca: "Bom potencial para liderar times com foco em cultura e engajamento. Lidera pelo exemplo e administra conflitos com empatia.",
      areas_desenvolvimento: [
        "Delega√ß√£o eficiente para escalar impacto",
        "Vis√£o estrat√©gica de m√©dio prazo",
        "Gest√£o de stakeholders complexos"
      ],
      visao_estrategica: "Compreens√£o de impactos de m√©dio prazo e capacidade de articular vis√£o para equipes. Alinha a√ß√µes com objetivos organizacionais.",
      recomendacoes: "Investir em programas de desenvolvimento de lideran√ßa, dar projetos de maior responsabilidade e inserir em comit√™s interfuncionais."
    },
    "SUPEROU A EXPECTATIVA": {
      perfil: "Perfil de alto desempenho humano: forte congru√™ncia entre valores, imagem e a√ß√£o. Inspira confian√ßa, responsabilidade e empatia.",
      comportamento: "Atua com autonomia, iniciativa e vis√£o. Resolve problemas complexos com abordagem humana, integrando resultados e cuidado com pessoas.",
      competencias: "Excel√™ncia em compet√™ncias comportamentais e t√©cnicas; alta adaptabilidade; forte capacidade de ensino e coaching.",
      lideranca: "L√≠der natural ‚Äî influencia por autoridade moral mais que por poder hier√°rquico. Preparado para pap√©is estrat√©gicos e de alto impacto.",
      areas_desenvolvimento: [
        "Evitar sobrecarga e centraliza√ß√£o de decis√µes",
        "Estruturar sucess√£o e multiplicar conhecimento",
        "Foco em m√©tricas estrat√©gicas e governan√ßa"
      ],
      visao_estrategica: "Vis√£o estrat√©gica abrangente e capacidade de articular futuro organizacional. Influencia dire√ß√£o estrat√©gica e cultura.",
      recomendacoes: "Promover para pap√©is de maior alcance, investir em forma√ß√£o executiva e designar como mentor de talentos-chave."
    }
  }
  return profiles[status] || null
}

export default async function handler(req, res){
  try{
    console.log('üîç [candidates] Iniciando requisi√ß√£o')
    console.log('üîç [candidates] Headers:', req.headers)
    
    // Validar autentica√ß√£o e permiss√µes
    try {
      await assertAuth(req)
      console.log('‚úÖ [candidates] Autentica√ß√£o bem-sucedida')
    } catch (authError) {
      console.error('‚ùå [candidates] Erro de autentica√ß√£o:', authError)
      return fail(res, authError, authError.status || 401)
    }
    
    const supabase = getSupabaseAdmin()
    console.log('‚úÖ [candidates] Cliente Supabase criado')
    
    const { data, error } = await supabase
      .from('candidates')
      .select('id,name,email,score,status,created_at')
      .order('created_at', { ascending: false })
    
    if(error) {
      console.error('‚ùå Erro ao buscar candidatos:', error)
      return fail(res, { message: 'Erro ao buscar candidatos: ' + error.message }, 500)
    }
    
    console.log('‚úÖ [candidates] Dados do Supabase obtidos:', data?.length || 0, 'registros')
    
    // Adicionar perfil comportamental completo para cada candidato
    const candidatesWithProfile = data?.map(candidate => {
      const status = candidate.status || classify(candidate.score)
      const profile = getBehavioralProfile(status)
      
      // Formatar perfil comportamental como texto estruturado para exporta√ß√£o
      let behavioralProfileText = "Perfil n√£o dispon√≠vel"
      
      if (profile) {
        behavioralProfileText = `PERFIL:
${profile.perfil}

COMPORTAMENTO:
${profile.comportamento}

COMPET√äNCIAS:
${profile.competencias}

LIDERAN√áA:
${profile.lideranca}

√ÅREAS DE DESENVOLVIMENTO:
${profile.areas_desenvolvimento.map(area => `‚Ä¢ ${area}`).join('\n')}

VIS√ÉO ESTRAT√âGICA:
${profile.visao_estrategica}

RECOMENDA√á√ïES:
${profile.recomendacoes}`
      }
      
      return {
        ...candidate,
        status: status,
        behavioral_profile: behavioralProfileText,
        behavioral_profile_data: profile // Manter dados estruturados para uso interno
      }
    }) || []
    
    console.log('‚úÖ Candidatos buscados com sucesso:', { count: candidatesWithProfile.length })
    
    ok(res, candidatesWithProfile)
    
  }catch(e){ 
    console.error('‚ùå Erro na API candidates:', e)
    fail(res, e) 
  }
}
