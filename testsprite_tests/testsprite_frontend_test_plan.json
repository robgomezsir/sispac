[
  {
    "id": "TC001",
    "title": "User Login with Valid Credentials",
    "description": "Verify that a user can log in successfully using valid email and password credentials through the Supabase authentication system.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page."
      },
      {
        "type": "action",
        "description": "Input a valid email address and corresponding password."
      },
      {
        "type": "action",
        "description": "Click the login button."
      },
      {
        "type": "assertion",
        "description": "Verify the user is successfully logged in and redirected to the appropriate dashboard based on role."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Login with Invalid Credentials",
    "description": "Verify that login fails when incorrect email or password is entered, and that an appropriate error message is shown.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page."
      },
      {
        "type": "action",
        "description": "Input an invalid or non-existent email or wrong password."
      },
      {
        "type": "action",
        "description": "Click the login button."
      },
      {
        "type": "assertion",
        "description": "Confirm login fails and show an error message indicating invalid credentials."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Password Recovery Flow",
    "description": "Verify the password recovery process including sending recovery email and updating password with a valid reset link.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the password recovery page."
      },
      {
        "type": "action",
        "description": "Enter a registered email address and submit the recovery request."
      },
      {
        "type": "assertion",
        "description": "Verify email is sent with password reset instructions."
      },
      {
        "type": "action",
        "description": "Open the link from the recovery email and enter a new valid password."
      },
      {
        "type": "action",
        "description": "Submit the new password."
      },
      {
        "type": "assertion",
        "description": "Verify password is updated and login succeeds with the new password."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Token Validation for Candidate Access",
    "description": "Validate that candidate access tokens are verified correctly via the API and unauthorized access is prevented.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send a request to the /auth/validate-token endpoint with a valid token."
      },
      {
        "type": "assertion",
        "description": "Verify the API responds with a valid confirmation of token authenticity."
      },
      {
        "type": "action",
        "description": "Send a request with an expired or invalid token."
      },
      {
        "type": "assertion",
        "description": "Verify the API rejects the token and denies access."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Candidate Questionnaire Normal Submission",
    "description": "Verify that the candidate can successfully access the behavioral evaluation form using a valid token, complete all questions, and submit the form with correct scoring.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the behavioural evaluation form via the tokenized link."
      },
      {
        "type": "assertion",
        "description": "Verify all questions load properly with interactive UI elements."
      },
      {
        "type": "action",
        "description": "Answer all questions with valid responses."
      },
      {
        "type": "action",
        "description": "Submit the completed form."
      },
      {
        "type": "assertion",
        "description": "Verify the form is accepted and behavioral score is calculated accurately based on weighted scoring algorithm."
      },
      {
        "type": "assertion",
        "description": "Verify the candidate receives a summary of results and confirmation of submission."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Candidate Questionnaire Validation Errors",
    "description": "Verify that the form validates inputs correctly and prevents incomplete or invalid submissions.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open the questionnaire form with a valid token."
      },
      {
        "type": "action",
        "description": "Submit the form with missing mandatory answers."
      },
      {
        "type": "assertion",
        "description": "Verify the form displays validation errors indicating which fields require input."
      },
      {
        "type": "action",
        "description": "Input invalid data types where applicable (if relevant)."
      },
      {
        "type": "assertion",
        "description": "Verify the form prevents submission and displays relevant validation messages."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Dashboard Access and Role-Based Permissions",
    "description": "Verify that different user roles (Admin, RH, User) can access dashboard and their accessible features correspond correctly to their permission levels.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as Admin user and access the dashboard."
      },
      {
        "type": "assertion",
        "description": "Verify full dashboard access with all functionalities (filters, export, edit/delete)."
      },
      {
        "type": "action",
        "description": "Log in as RH user and access the dashboard."
      },
      {
        "type": "assertion",
        "description": "Verify access to candidate data with reading and filtering but restricted editing or deletion as per requirements."
      },
      {
        "type": "action",
        "description": "Log in as regular User and attempt to access dashboard."
      },
      {
        "type": "assertion",
        "description": "Verify access is denied or limited according to role permissions."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Dashboard Filters, Search, Sorting and Export",
    "description": "Verify that the dashboard correctly filters, searches, sorts candidate data and exports reports in .xlsx format without errors.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as authorized user with dashboard access."
      },
      {
        "type": "action",
        "description": "Apply advanced filters for candidate attributes and verify correct list updates."
      },
      {
        "type": "action",
        "description": "Use search function with valid/invalid queries and verify search results."
      },
      {
        "type": "action",
        "description": "Sort candidates by different fields and verify ordering."
      },
      {
        "type": "action",
        "description": "Trigger export of current filtered candidate list to .xlsx."
      },
      {
        "type": "assertion",
        "description": "Verify exported file downloads correctly, contains expected data and formatting."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Integration via Gupy Webhook with Candidate Sync",
    "description": "Verify the integration webhook receives candidate data from Gupy platform, processes it to create entries, generates unique tokens, and sends correct access links.",
    "category": "integration",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send a valid webhook POST request simulating candidate data received from Gupy."
      },
      {
        "type": "assertion",
        "description": "Verify the system stores the candidate data successfully."
      },
      {
        "type": "assertion",
        "description": "Verify a unique token is generated for the candidate."
      },
      {
        "type": "assertion",
        "description": "Verify that the candidate receives the correct unique link containing token."
      },
      {
        "type": "action",
        "description": "Send a webhook request with corrupted or incomplete data."
      },
      {
        "type": "assertion",
        "description": "Verify the system handles the error gracefully without data corruption."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "PWA Offline Mode Functionality",
    "description": "Verify the application works correctly in offline mode including data caching, navigating pages, and showing offline indicators.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Install the SisPAC PWA on a supported device."
      },
      {
        "type": "action",
        "description": "Load various application pages while online to cache data."
      },
      {
        "type": "action",
        "description": "Switch device to offline mode or disconnect network."
      },
      {
        "type": "assertion",
        "description": "Verify the application is still accessible and usable with cached data."
      },
      {
        "type": "assertion",
        "description": "Verify offline indicator is visible."
      },
      {
        "type": "action",
        "description": "Attempt to submit a form or perform an action requiring network."
      },
      {
        "type": "assertion",
        "description": "Verify appropriate error or retry mechanisms are triggered."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Theme Switching Between Light and Dark Modes",
    "description": "Verify that the user can toggle between light and dark themes and that the preference is persisted during session and reloads.",
    "category": "ui",
    "priority": "Low",
    "steps": [
      {
        "type": "action",
        "description": "Access the theme dropdown component."
      },
      {
        "type": "action",
        "description": "Switch from default to dark theme."
      },
      {
        "type": "assertion",
        "description": "Verify UI colors and theme-related styles update accordingly."
      },
      {
        "type": "action",
        "description": "Refresh the page or reopen the app."
      },
      {
        "type": "assertion",
        "description": "Verify the dark theme preference is retained."
      },
      {
        "type": "action",
        "description": "Switch back to light theme and verify similar behavior."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "System Diagnostics: Connectivity and Authentication Status",
    "description": "Verify that diagnostic components correctly display user authentication status and network connectivity conditions.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open the application while online and logged in."
      },
      {
        "type": "assertion",
        "description": "Verify authentication component displays correct logged-in user info."
      },
      {
        "type": "assertion",
        "description": "Verify connectivity diagnostic shows online status."
      },
      {
        "type": "action",
        "description": "Simulate network disconnection."
      },
      {
        "type": "assertion",
        "description": "Verify connectivity diagnostic changes to offline mode indicator."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "API Response and Performance Under Load",
    "description": "Validate the backend API maintains uptime >99.9% and average response times less than 500ms under typical and peak loads.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate normal authorized user traffic to key API endpoints (/auth/login, /api/candidates, /form)."
      },
      {
        "type": "assertion",
        "description": "Measure response times and verify consistently below 500ms."
      },
      {
        "type": "action",
        "description": "Simulate peak load with concurrent requests."
      },
      {
        "type": "assertion",
        "description": "Verify system uptime and responsiveness remain within SLA."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Completion Rate and User Satisfaction Metrics",
    "description": "Verify that candidate behavior evaluation completion rate exceeds 90% and post-test user satisfaction is above 4.5 out of 5.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Collect and analyze behavioral evaluation test completion data over a sample period."
      },
      {
        "type": "assertion",
        "description": "Verify completion rate is above 90%."
      },
      {
        "type": "action",
        "description": "Collect user feedback score on test experience."
      },
      {
        "type": "assertion",
        "description": "Verify average satisfaction rating meets or exceeds 4.5/5."
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Token Expiration and Refresh Mechanism",
    "description": "Verify the system automatically refreshes JWT tokens via Supabase without interrupting active sessions and properly expires tokens after defined period.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in and maintain a session past the initial token's expiration."
      },
      {
        "type": "assertion",
        "description": "Verify the system silently refreshes the token to maintain session."
      },
      {
        "type": "action",
        "description": "Attempt access with a manually expired token."
      },
      {
        "type": "assertion",
        "description": "Verify access is denied and re-authentication is required."
      }
    ]
  }
]
